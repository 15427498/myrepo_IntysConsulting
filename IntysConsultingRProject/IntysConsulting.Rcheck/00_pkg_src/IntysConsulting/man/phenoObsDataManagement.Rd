% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenoOBSDataManagement.R
\name{phenoObsDataManagement}
\alias{phenoObsDataManagement}
\title{Data management of pheno OBS.}
\usage{
phenoObsDataManagement(
  parentsPhenotypeDataFrame,
  parentsGeneticSimilarityMatrix,
  constraintParameters = NULL,
  traitObjectiveWeights
)
}
\arguments{
\item{parentsPhenotypeDataFrame}{(required) A data frame containing the parentNames in the first column, the trait names as headings in the remaining columns, and the parent phenotype information in the remaining matrix entries.
See example below for more clarity.}

\item{parentsGeneticSimilarityMatrix}{(required, double) An [N*N] data frame, also known as relationship (triangular) matrix, containing the degree of genetic similarity accross all pairs of parents (i.e. accross all potential crosses).
The entries ought to be mapped on the range [0,1].}

\item{constraintParameters}{(required, double matrix) A [T*2] data frame delimiting the feasible domain space with 
the use of threshold operational constraints. In the first and second column (respectively):
* lbvalue : Lower numerical threshold.
* ubvalue : Upper numerical threshold.
These numerical thresholds impose tolerance bounds on the expected trait values that the resulting offspring corsses are allowed to undertake.
Leave blank fields for unconstrained traits.
Imposing both upper and lower thresholds on a specific trait is permitted.
Check the constriction level of your resulting search space with the complementary function "phenoOBSCheckSearchSpace".
The default setting is NULL.}

\item{traitObjectiveWeights}{(required, double matrix) A [T*2] data frame containing the trait sub-objective weights.
In the first and second column (respectively):
* weight (double) : Sub-objective weight of the criterion.
* is.maximisation? (boolean) : Enter 1 if the sub-objective is to be maximised, and 0 otherwise.
Leave blank fields (or zeros) for traits not considered in the configuration of the objective space.
Although the weights need not necessarily add up to one, they need to be proportional to one another as a direct reflection of their relative importance.}
}
\value{
A list containing the following five objects (respectively): 
1. A matrix containing:
    * The feasible offspring Ids in the first column,
    * The corresponding offspring parent ids in the second and third columns, and
    * The weighted, normalised trait objective evaluation of the offspring.
2. An array containing the normalised upper triangular entries of the parents genetic similarity matrix.
3. The parents phenotype input data frame (same as described earlier) for use in the other pheno OBS functions. 
4. A matrix containing the overall offspring information (for use in the output function).
5. The parents genetic similarity matrix described above (for use in the output function).
}
\description{
Manage, convert and simplify the pheno OBS user input data to be presented as Java input.
}
\details{
Symbols notation:
* T : The total number of input traits,
* N : The total number of parents,
* n : The size of the solution.
}
\examples{
parentsPhenotypeDataFrame <- data.frame(
parentNames = c("A","B","C","D"),
Yield = c(1200,1300,1250,1150),
Lint = c(50,40,45,55),
BollType = c(4.5,4,3,4.5))
parentsGeneticSimilarityMatrix <- matrix(nrow = 4, ncol = 4)
parentsGeneticSimilarityMatrix[1,] = c(1,0.60,0.40,0.30)
parentsGeneticSimilarityMatrix[2,] = c(0.60,1,0.50,0.35)
parentsGeneticSimilarityMatrix[3,] = c(0.40,0.50,1,0.55)
parentsGeneticSimilarityMatrix[4,] = c(0.30,0.35,0.55,1)
constraintParameters <- matrix(nrow = 3, ncol = 2)
constraintParameters[1,1] <- 1190
traitObjectiveWeights <- matrix(nrow = 3, ncol = 2)
traitObjectiveWeights[1,] = c(0.7,1)
traitObjectiveWeights[2,] = c(0.3,1)
traitObjectiveWeights[3,] = c(0,1)

}
\author{
A.Colmant, K.Baert and G.De Meyer
}
