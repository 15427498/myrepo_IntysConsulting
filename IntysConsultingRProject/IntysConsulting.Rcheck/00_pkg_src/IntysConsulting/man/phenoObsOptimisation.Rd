% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/phenoOBSOptimisation.R
\name{phenoObsOptimisation}
\alias{phenoObsOptimisation}
\title{Optimisation of pheno OBS.}
\usage{
phenoObsOptimisation(
  parentsPhenotypeDataFrame,
  offspringPhenotype,
  parentsGeneticSimilarityArray,
  geneticSimilarityWeight,
  penaltyReplicatedIndividuals,
  inbreedingCoefficientMetric = TRUE,
  Gmatrix = matrix(nrow = 1, ncol = 1),
  inbreedingCoefficientBoundsEstimatorSampleSize = 10000,
  inclusionSet = NULL,
  exclusionSet = NULL,
  solutionSize,
  maximumSearchTime,
  timeWithoutImprovement = 10000,
  maximumNumberMoves = 9e+07,
  searchMethod = "MS",
  searchParametersMS = c(5e-05),
  searchParametersPT = c(6, 1e-07, 0.001)
)
}
\arguments{
\item{parentsPhenotypeDataFrame}{(required) A data frame containing the parentNames in the first column, the trait names as headings in the remianing columns, and the parent phenotype information in the remaining matrix entries.
See example below for more clarity.
This data frame may also be obtained from the phenoOBSDataManagement output.}

\item{offspringPhenotype}{(required) A matrix containing:
* The feasible offspring Ids in the first column,
* The corresponding offspring parents in the second and third columns, and
* The weighted, normalised trait objective evaluation of the offspring.
This Matrix is obtained from the phenoOBSDataManagement output.}

\item{parentsGeneticSimilarityArray}{(required) An array containing the normalised upper triangular entries of the parents genetic similarity matrix.
This Matrix is obtained from the phenoOBSDataManagement output.}

\item{geneticSimilarityWeight}{(required) A value in the range [0,1] for the importance of solution similarity relative to the traits.
For example, if specified to be 0.3, then the algorithm will automatically allocate 0.7 toward finding solutions that are strong across the entirety of the traits sub-objective.
Note, however, that the individual trait importances are in phenoOBSDataManagement.}

\item{penaltyReplicatedIndividuals}{(default, double) A soft-constraint value penalising the presence of replicated individuals in a solution.
Note that this value is not normalised alongside the set of upper triangular matrix entries, and so it must have at least a value of one.}

\item{inbreedingCoefficientMetric}{(default, boolean) Set to TRUE if the inbreeding coefficient ought to be used to measure the diversity in the population, and FALSE if the more basic genetic similarity metric ought to be used.
The default value is TRUE.}

\item{Gmatrix}{(default) A symmetrical matrix containing values on the range [0,2] depicting the relationship between the parents.
This matrix is for use only in the inbreeding coefficient metric and thus only needs to be provided if the argument inbreedingCoefficientMetric is TRUE.}

\item{inbreedingCoefficientBoundsEstimatorSampleSize}{(default, integer) A value specifying the number of samples employed in estimating the lower and upper bound values of the inbreeding coefficient metric.
Thse bounds are used toward the normalisation process of the diversity sub-objective function.
The higher the complexity of the problem, the higher this value ought to be.
The default value is set to a conservative 10000.}

\item{inclusionSet}{(default, integer array) A vector containing the integer ids of offsping crosses that the user desires to include a priori in the returned solution.
The default value is a null vector, so that no id inclusion constraint is imposed on the selection of crosses.}

\item{exclusionSet}{(default, integer array) A vector containing the integer ids of offsping crosses that the user desires to exclude a priori from the returned solution.
The default value is a null vector, so that no id exclusion constraint is imposed on the selection of crosses.}

\item{solutionSize}{(required, integer) The number of crosses to be extracted.}

\item{maximumSearchTime}{(required, integer) An upper bound on the total duration of the optimisation process.
This parameter is configured in milliseconds.}

\item{timeWithoutImprovement}{(default, integer) An upper bound on the total duration of the optimisation process.
This parameter is configured in milliseconds.}

\item{maximumNumberMoves}{(default, integer) An upper bound on the total number of search space solutions visited and assessed during the course of the optimisation process.}

\item{searchMethod}{(default) Summon either one of these three proposed algorithms to run: 
1. Random descent (enter "RD"); 
2. Metropolis search (enter "MS") or 
3. Parallel  tempering (enter "PT").}

\item{searchParametersMS}{(default, double) A [1*1] data vector specifying the initial temperature of the Metropolis search algorithm.}

\item{searchParametersPT}{(default) A [1*3] data vector specifying the search parameters of the parallel tempering search algorithm.
In the first, second and third slot (respectively):
1. processors (integer) : The number of processors running in parallel.
2. minTemp (double) : Minimum (i.e. final) temperature.
3. maxTemp (double) : Maximum (i.e. initial) temperature.}
}
\value{
A list containing the following five objects (respectively): 
1. The best found ids in R format,
2. The genetic diversity score of the best found solution,
3. The size of the extracted solution (for use in the phenoOBSOutput function),
4. The objective function value of the best found solution, and 
5. The convergence time (in milliseconds) of the algorithm (i.e. how long it took to reach the vicinity of the best found solution).
}
\description{
Run a JAMES subset selection algorithm to attemptively find an optimal solution to a pheno OBS problem.
}
\examples{
parentsPhenotypeDataFrame <- data.frame(
parentNames = c("A","B","C","D"),
Yield = c(1200,1300,1250,1150),
Lint = c(50,40,45,55),
BollType = c(4.5,4,3,4.5))
offspringPhenotype <- matrix(nrow = 5, ncol = 4)
offspringPhenotype[1,] <- c(1,1,2,0.6)
offspringPhenotype[2,] <- c(2,1,3,0.5)
offspringPhenotype[3,] <- c(4,2,3,0.7)
offspringPhenotype[4,] <- c(5,2,4,0.5)
offspringPhenotype[5,] <- c(6,3,4,0.4)
parentsGeneticSimilarityArray <- c(1,0.33333333,0,0.66666667,0.166666667,0.8333333333)
geneticSimilarityWeight <- 0.4
penaltyReplicatedIndividuals <- 1.08
inbreedingCoefficientMetric <- TRUE
Gmatrix <- matrix(nrow = 4, ncol = 4)
Gmatrix[1,] = c(1,0.60,1.40,0.30)
Gmatrix[2,] = c(0.60,1,0.50,0.35)
Gmatrix[3,] = c(1.40,0.50,1,1.55)
Gmatrix[4,] = c(0.30,0.35,1.55,1)
inbreedingCoefficientBoundsEstimatorSampleSize <- 300
inclusionSet <- c(4)
exclusionSet <- c(6)
solutionSize <- 2
maximumSearchTime <- 500
timeWithoutImprovement <- 200
maximumNumberMoves <- 400
searchMethod <- c("MS")
searchParametersMS <- c(5)
searchParametersPT <- c(6,0.001,9)

}
\author{
A.Colmant, K.Baert and G.De Meyer
}
